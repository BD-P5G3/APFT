<Page
    x:Class="APFT.Views.ConstructionDetailsPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:entities="using:APFT.Entities"
    mc:Ignorable="d">

	<Grid x:Name="ContentArea" VerticalAlignment="Top" RowSpacing="32">
		<Grid.RowDefinitions>
			<RowDefinition Height="Auto"/>
			<RowDefinition/>
		</Grid.RowDefinitions>

		<!-- Header -->
		<Grid Grid.Row="0" ColumnSpacing="8" Margin="0,10,0,-8">
			<Grid.ColumnDefinitions>
				<ColumnDefinition />
				<ColumnDefinition Width="Auto" />
				<ColumnDefinition Width="Auto" />
			</Grid.ColumnDefinitions>

			<!-- Header text -->
			<TextBlock Grid.Column="0"
                       x:Uid="/ConstructionDetails/Header"
                       Style="{ThemeResource TitleTextBlockStyle}" />

			<!-- Delete button -->
			<Button Grid.Column="1"
                    x:Name="DeleteButton"
                    Click="DeleteButton_OnClick">
				<Viewbox Height="16" Width="16">
					<FontIcon FontFamily="{StaticResource SymbolThemeFontFamily}" Glyph="&#xE74D;"/>
				</Viewbox>
				<ToolTipService.ToolTip>
					<ToolTip x:Uid="/ConstructionDetails/DeleteButton"/>
				</ToolTipService.ToolTip>
			</Button>

			<!-- Edit info button -->
			<Button Grid.Column="2"
                    x:Name="EditInfoButton"
                    Click="EditInfoButton_OnClick"
                    Style="{StaticResource AccentButtonStyle}">
				<Grid>
					<Viewbox Height="16" Width="16" x:Name="EditInfoViewBox">
						<Grid>
							<FontIcon x:Name="EditInfoIcon"
                                      FontFamily="{StaticResource SymbolThemeFontFamily}"
                                      Glyph="&#xE70F;"
                                      Opacity="1"/>
							<FontIcon x:Name="EditInfoIconCheckmark"
                                      FontFamily="{StaticResource SymbolThemeFontFamily}"
                                      Glyph="&#xE73E;"
                                      Opacity="0"/>
						</Grid>
					</Viewbox>
					<ProgressRing IsActive="True"
                                  Height="16"
                                  Width="16"
                                  Foreground="White"
                                  Opacity="0"
                                  x:Name="EditInfoProgressRing"/>
				</Grid>

				<ToolTipService.ToolTip>
					<ToolTip x:Uid="/ConstructionDetails/EditInfoButton"/>
				</ToolTipService.ToolTip>
			</Button>
		</Grid>

		<!-- Content -->
		<ScrollViewer Grid.Row="1" Padding="0,0,56,0" Margin="0,0,-56,0">
			<Grid RowSpacing="32" Padding="0,0,0,16">
				<Grid.RowDefinitions>
					<RowDefinition/>
					<RowDefinition/>
					<RowDefinition/>
				</Grid.RowDefinitions>

				<!-- Construction info area -->
				<Grid Grid.Row="0" RowSpacing="16">
					<Grid.RowDefinitions>
						<RowDefinition />
						<RowDefinition />
						<RowDefinition />
					</Grid.RowDefinitions>

					<!-- Location -->
                    <TextBox Grid.Column="0" Text="{x:Bind Location, Mode=TwoWay}" x:Uid="/ConstructionDetails/LocationTextBox" />

					<!-- ID & customer NIF -->
					<Grid Grid.Row="1" ColumnSpacing="16">
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="*"/>
							<ColumnDefinition Width="*"/>
						</Grid.ColumnDefinitions>

                        <TextBox Grid.Row="0" Grid.Column="0" Text="{x:Bind Id, Mode=TwoWay}" x:Uid="/ConstructionDetails/IdTextBox" />
                        <TextBox Grid.Column="1" Text="{x:Bind CustomerNif, Mode=TwoWay}" x:Uid="/ConstructionDetails/CustomerNifTextBox" />
					</Grid>

					<!-- Start & end date -->
					<Grid Grid.Row="2" ColumnSpacing="16" x:Name="DatesGrid" SizeChanged="DatesGrid_OnSizeChanged">
						<Grid.ColumnDefinitions>
							<ColumnDefinition x:Name="DatesGridColumn"/>
							<ColumnDefinition/>
						</Grid.ColumnDefinitions>

                        <CalendarDatePicker Grid.Column="0"
                                            x:Uid="/ConstructionDetails/StartCalendarDatePicker"
                                            x:Name="StartCalendarDatePicker"
                                            DateChanged="StartCalendarDatePicker_OnDateChanged"/>

                        <CalendarDatePicker Grid.Column="1"
                                            x:Uid="/ConstructionDetails/EndCalendarDatePicker"
                                            x:Name="EndCalendarDatePicker"
                                            DateChanged="EndCalendarDatePicker_OnDateChanged"/>
					</Grid>
				</Grid>

				<!-- Construction's employees -->
				<Grid Grid.Row="1" RowSpacing="8" x:Name="ConstructionEmployeesGrid" Visibility="Collapsed">
					<Grid.RowDefinitions>
						<RowDefinition/>
						<RowDefinition/>
					</Grid.RowDefinitions>

					<!-- Header (i.e., a subtitle) -->
					<Grid Grid.Row="0">
						<Grid.ColumnDefinitions>
							<ColumnDefinition/>
							<ColumnDefinition Width="Auto"/>
						</Grid.ColumnDefinitions>

						<TextBlock Grid.Column="0" x:Uid="/ConstructionDetails/EmployeesSubheader"
								   VerticalAlignment="Center"
                                   Style="{ThemeResource SubtitleTextBlockStyle}" />

						<!-- Add employee button -->
						<Button Grid.Column="1" VerticalAlignment="Center">
							<Viewbox Height="16" Width="16">
								<FontIcon FontFamily="{StaticResource SymbolThemeFontFamily}" Glyph="&#xE710;"/>
							</Viewbox>
							<ToolTipService.ToolTip>
								<ToolTip x:Uid="/ConstructionDetails/AddHoursNewButtonFlyout" />
							</ToolTipService.ToolTip>
							<Button.Flyout>
								<Flyout ShouldConstrainToRootBounds="False">
									<StackPanel Spacing="16">
										<TextBox x:Name="AddHoursNewTextBox" x:Uid="/ConstructionDetails/AddHoursNewTextBox" PlaceholderText="0"/>
										<CalendarDatePicker x:Name="AddHoursNewCalendarPicker" x:Uid="/ConstructionDetails/AddHoursCalendarPicker" Width="200" />
										<NumberBox x:Uid="/ConstructionDetails/AddHoursNumberBox"
                                                   x:Name="AddHoursNumberBox"
                                                   SpinButtonPlacementMode="Inline"
                                                   SmallChange="1"
                                                   LargeChange="1"
                                                   Value="0"
                                                   Minimum="0"
                                                   Maximum="23"/>
										<Button x:Uid="/ConstructionDetails/AddHoursButton" Click="AddHoursNewButton_OnClick" Style="{StaticResource AccentButtonStyle}" />
									</StackPanel>
								</Flyout>
							</Button.Flyout>
						</Button>
					</Grid>

					<!-- Employees list -->
					<ListView Grid.Row="1"
                              x:Name="EmployeesGridView"
                              IsItemClickEnabled="True"
                              ItemClick="EmployeesGridView_OnItemClick"
                              SelectionMode="None">

						<!-- Card style -->
						<ListView.ItemContainerStyle>
							<Style TargetType="ListViewItem">
								<Setter Property="Template">
									<Setter.Value>
										<ControlTemplate TargetType="ListViewItem">
											<Grid Margin="0, 0, 0 4">
												<VisualStateManager.VisualStateGroups>
													<VisualStateGroup x:Name="CommonStates">
														<VisualState x:Name="Normal" />

														<!-- Hover effect -->
														<VisualState x:Name="PointerOver">
															<VisualState.Setters>
																<Setter Target="CardBorder.Opacity" Value="0.4" />
															</VisualState.Setters>
														</VisualState>

														<!-- Pressed effect -->
														<VisualState x:Name="Pressed">
															<VisualState.Setters>
																<Setter Target="CardBorder.Opacity" Value="0.2" />
															</VisualState.Setters>
														</VisualState>
													</VisualStateGroup>
												</VisualStateManager.VisualStateGroups>

												<!-- Background -->
												<Border x:Name="CardBorder"
                                                        CornerRadius="8"
                                                        Background="{ThemeResource CardBackgroundFillColorDefaultBrush}"/>

												<!-- Border -->
												<Border BorderThickness="1"
                                                        BorderBrush="{ThemeResource CardStrokeColorDefaultBrush}"
                                                        CornerRadius="8"
                                                        Padding="12"/>

												<!-- Content template (see ListView.ItemTemplate) -->
												<ContentPresenter Content="{TemplateBinding Content}"
                                                                  ContentTemplate="{TemplateBinding ContentTemplate}" />
											</Grid>
										</ControlTemplate>
									</Setter.Value>
								</Setter>
							</Style>
						</ListView.ItemContainerStyle>

						<!-- List item template -->
						<ListView.ItemTemplate>
							<DataTemplate x:DataType="entities:Employee">
								<Grid ColumnSpacing="8" Padding="12, 12, 8, 12">
									<Grid.ColumnDefinitions>
										<ColumnDefinition Width="*"/>
										<ColumnDefinition Width="Auto"/>
										<ColumnDefinition Width="Auto"/>
									</Grid.ColumnDefinitions>
									<Grid.RowDefinitions>
										<RowDefinition/>
										<RowDefinition/>
									</Grid.RowDefinitions>

									<!-- Name -->
									<TextBlock Grid.Column="0"
                                               Grid.Row="0"
                                               Text="{x:Bind Name}"
                                               x:Phase="1"
                                               Style="{StaticResource BodyStrongTextBlockStyle}"/>

									<!-- Hours -->
									<TextBlock Grid.Column="0"
                                               Grid.Row="1">
										Total hours:
									</TextBlock>

									<!-- Add hours -->
									<Button Grid.Column="1" Grid.Row="0" Grid.RowSpan="2" VerticalAlignment="Center" Content="Add hours">
										<Button.Flyout>
											<Flyout ShouldConstrainToRootBounds="False">
												<StackPanel Spacing="16">
													<TextBlock Text="{x:Bind Nif, Mode=OneWay}"/>
													<CalendarDatePicker x:Uid="/ConstructionDetails/AddHoursCalendarPicker" Width="200" />
													<NumberBox x:Uid="/ConstructionDetails/AddHoursNumberBox"
                                                               SpinButtonPlacementMode="Inline"
                                                               SmallChange="1"
                                                               LargeChange="1"
                                                               Value="0"
                                                               Minimum="0"
                                                               Maximum="23"/>
													<Button x:Uid="/ConstructionDetails/AddHoursButton" Click="AddHoursExistingButton_OnClick" Style="{StaticResource AccentButtonStyle}" />
												</StackPanel>
											</Flyout>
										</Button.Flyout>
									</Button>

									<!-- Chevron -->
									<Viewbox Grid.Column="2"
                                             Grid.Row="0"
                                             Grid.RowSpan="2"
                                             Height="16"
                                             Width="16">
										<FontIcon FontFamily="{StaticResource SymbolThemeFontFamily}"
                                                  Glyph="&#xE76C;"/>
									</Viewbox>
								</Grid>
							</DataTemplate>
						</ListView.ItemTemplate>
					</ListView>
				</Grid>

				<!-- Construction's services -->
				<Grid Grid.Row="2" RowSpacing="8" x:Name="ConstructionServicesGrid" Visibility="Collapsed">
					<Grid.RowDefinitions>
						<RowDefinition/>
						<RowDefinition/>
					</Grid.RowDefinitions>

					<!-- Header (i.e., a subtitle) -->
					<Grid Grid.Row="0">
						<Grid.ColumnDefinitions>
							<ColumnDefinition/>
							<ColumnDefinition Width="Auto"/>
						</Grid.ColumnDefinitions>

						<TextBlock Grid.Column="0" x:Uid="/ConstructionDetails/ServicesSubheader"
								   VerticalAlignment="Center"
                                   Style="{ThemeResource SubtitleTextBlockStyle}" />

						<!-- Add service button -->
						<Button Grid.Column="1" VerticalAlignment="Center">
							<Viewbox Height="16" Width="16">
								<FontIcon FontFamily="{StaticResource SymbolThemeFontFamily}" Glyph="&#xE710;"/>
							</Viewbox>
							<ToolTipService.ToolTip>
								<ToolTip x:Uid="/ConstructionDetails/AddServiceNewButtonFlyout" />
							</ToolTipService.ToolTip>
							<Button.Flyout>
								<Flyout ShouldConstrainToRootBounds="False">
									<StackPanel Spacing="16">
                                        <NumberBox x:Uid="/ConstructionDetails/AddServiceNumberBox"
                                                   x:Name="AddServiceNumberBox"
                                                   PlaceholderText="0"
                                                   Width="200"/>

										<Button x:Uid="/ConstructionDetails/AddServiceButton"
                                                Click="AddServiceNewButton_OnClick"
                                                Style="{StaticResource AccentButtonStyle}" />
									</StackPanel>
								</Flyout>
							</Button.Flyout>
						</Button>
					</Grid>

					<!-- Services list -->
					<ListView Grid.Row="1"
                              x:Name="ServicesGridView"
                              IsItemClickEnabled="True"
                              ItemClick="ServicesGridView_OnItemClick"
                              SelectionMode="None">

						<!-- Card style -->
						<ListView.ItemContainerStyle>
							<Style TargetType="ListViewItem">
								<Setter Property="Template">
									<Setter.Value>
										<ControlTemplate TargetType="ListViewItem">
											<Grid Margin="0, 0, 0 4">
												<VisualStateManager.VisualStateGroups>
													<VisualStateGroup x:Name="CommonStates">
														<VisualState x:Name="Normal" />

														<!-- Hover effect -->
														<VisualState x:Name="PointerOver">
															<VisualState.Setters>
																<Setter Target="CardBorder.Opacity" Value="0.4" />
															</VisualState.Setters>
														</VisualState>

														<!-- Pressed effect -->
														<VisualState x:Name="Pressed">
															<VisualState.Setters>
																<Setter Target="CardBorder.Opacity" Value="0.2" />
															</VisualState.Setters>
														</VisualState>
													</VisualStateGroup>
												</VisualStateManager.VisualStateGroups>

												<!-- Background -->
												<Border x:Name="CardBorder"
                                                        CornerRadius="8"
                                                        Background="{ThemeResource CardBackgroundFillColorDefaultBrush}"/>

												<!-- Border -->
												<Border BorderThickness="1"
                                                        BorderBrush="{ThemeResource CardStrokeColorDefaultBrush}"
                                                        CornerRadius="8"
                                                        Padding="12"/>

												<!-- Content template (see ListView.ItemTemplate) -->
												<ContentPresenter Content="{TemplateBinding Content}"
                                                                  ContentTemplate="{TemplateBinding ContentTemplate}" />
											</Grid>
										</ControlTemplate>
									</Setter.Value>
								</Setter>
							</Style>
						</ListView.ItemContainerStyle>

						<!-- List item template -->
						<ListView.ItemTemplate>
							<DataTemplate x:DataType="entities:Service">
								<Grid ColumnSpacing="8" Padding="12, 12, 8, 12">
									<Grid.ColumnDefinitions>
										<ColumnDefinition Width="*"/>
										<ColumnDefinition Width="Auto"/>
									</Grid.ColumnDefinitions>
									<Grid.RowDefinitions>
										<RowDefinition/>
										<RowDefinition/>
									</Grid.RowDefinitions>

									<!-- Name aka category -->
									<TextBlock Grid.Column="0"
                                               Grid.Row="0"
                                               Text="{x:Bind Category}"
                                               x:Phase="1"
                                               Style="{StaticResource BodyStrongTextBlockStyle}"/>

									<!-- Department ID -->
									<TextBlock Grid.Column="0"
                                               Grid.Row="1">
										<Run x:Uid="/ConstructionDetails/ServicesDepartment"/>: <Run Text="{x:Bind DepartmentId}"/>
									</TextBlock>

									<!-- Chevron -->
									<Viewbox Grid.Column="1"
                                             Grid.Row="0"
                                             Grid.RowSpan="2"
                                             Height="16"
                                             Width="16">
										<FontIcon FontFamily="{StaticResource SymbolThemeFontFamily}"
                                                  Glyph="&#xE76C;"/>
									</Viewbox>
								</Grid>
							</DataTemplate>
						</ListView.ItemTemplate>
					</ListView>
				</Grid>
			</Grid>
		</ScrollViewer>
	</Grid>
</Page>
